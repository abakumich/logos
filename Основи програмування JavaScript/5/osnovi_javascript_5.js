// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 1:
// ‚Äî –ù–∞–ø–∏—Å–∞—Ç–∏ —Ä–æ–∑–≤‚Äô—è–∑–æ–∫ –Ω–∏–∂—á–µ –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó switch:
// 1. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ –≤ prompt
// 2. –ü—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–ª–∞ –≤–∏—Å—Ç—Ä–∏–±—É—î –∞–ª–µ—Ä—Ç –∑ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è–º –ø–æ—Ä–∏ —Ä–æ–∫—É –¥–æ —è–∫–æ—ó
// –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è —á–∏—Å–ª–æ(–Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è) —â–æ –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á.
// 3. –Ø–∫—â–æ —á–∏—Å–ª–æ –Ω–µ –≤—Ö–æ–¥–∏—Ç—å –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω –≤—ñ–¥ 1 –¥–æ 12 —Ç–æ–¥—ñ –≤–∏–≤–æ–¥–∏—Ç—å —â–æ —Ü–µ –Ω–µ–º–æ–∂–ª–∏–≤–æ.

const month = +prompt("–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 12");

switch (month) {
  case 1:
  case 2:
  case 12:
    alert("–ó–∏–º–∞");
    break;
  case 3:
  case 4:
  case 5:
    alert("–í–µ—Å–Ω–∞");
    break;
  case 6:
  case 7:
  case 8:
    alert("–õ—ñ—Ç–æ");
    break;
  case 9:
  case 10:
  case 11:
    alert("–û—Å—ñ–Ω—å");
    break;
  default:
    alert("–ù–µ –º–æ–∂–ª–∏–≤–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏");
    break;
}

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 2:

// ‚Äî –ù–∞–ø–∏—Å–∞—Ç–∏ —Ä–æ–∑–≤‚Äô—è–∑–æ–∫ –Ω–∏–∂—á–µ –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é function declaration:
// 1. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ –æ–¥–Ω–µ —á–∏—Å–ª–æ.
// 2. –í —Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ —á–∏—Å–ª–æ —î –ø—Ä–æ—Å—Ç–∏–º.

// 3. –ü—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ console.log().

function primeNumber(num) {
  if (num > 0 && !(num % 1)) {
    let prime = true;
    //–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —è–∫—â–æ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–µ, —Ç–æ –≤–æ–Ω–æ –æ–¥—Ä–∞–∑—É –Ω–µ –ø—Ä–æ—Å—Ç–µ
    if (!(num % 2) && num !== 2) prime = false;
    else {
      let divider = 3,
        //–¥—ñ–ª–∏–º–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–µ —á–∏—Å–ª–æ num –Ω–∞ —á–∏—Å–ª–∞ –≤—ñ–¥ 3 –¥–æ –∫–æ—Ä–µ–Ω—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏–π –∑ num
        condition = Math.ceil(Math.sqrt(num));
      while (divider < condition + 1) {
        if (!(num % divider)) {
          prime = false;
          console.log(divider);
          break;
        }
        divider++;
      }
    }
    prime
      ? console.log(`–ß–∏—Å–ª–æ ${num} –ø—Ä–æ—Å—Ç–µ`)
      : console.log(`–ß–∏—Å–ª–æ ${num} —Å–∫–ª–∞–¥–æ–≤–µ`);
  } else console.log(`–í–≤–µ–¥–µ–Ω–æ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è`);
}

primeNumber(+prompt());

// üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 3:
// ‚Äî –ù–∞–ø–∏—Å–∞—Ç–∏ —Ä–æ–∑–≤‚Äô—è–∑–æ–∫ –Ω–∏–∂—á–µ –æ–ø–∏—Å–∞–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é function declaration:
// 1. –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –ø–µ—Ä–µ–¥–∞–Ω–∏–π —ó–π —á–∏—Å–ª–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä.
// 2. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —É —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂–µ –±—É—Ç–∏ –≤—ñ–¥ 2—Ö —ñ –±—ñ–ª—å—à–µ.

//–ó—Ä–æ–±–∏–≤ 3 –≤–∞—Ä—ñ–Ω—Ç–∏, —è–∫–∏–π –∫—Ä–∞—â–∏–π? –ß–∏ –º–æ–∂–µ —î –±—ñ–ª—å—à–µ –ø—Ä–∞–≤–∏–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è?
//–í–∞—Ä—ñ–∞–Ω—Ç 1
function max(...arg) {
  let result = arg[0];
  for (let i = 1; i < arg.length; i++) {
    if (arg[i] > result) result = arg[i];
  }
  return result;
}

//–í–∞—Ä—ñ–∞–Ω—Ç 2
function max(a, b, ...arg) {
  let result;
  a > b ? (result = a) : (result = b);
  if (arg.length) {
    for (let i = 1; i < arg.length; i++) {
      if (arg[i] > result) result = arg[i];
    }
  }
  return result;
}

//–í–∞—Ä—ñ–∞–Ω—Ç 3
function max() {
  let result = arguments[0];
  for (let i = 1; i < arguments.length; i++) {
    if (arguments[i] > result) result = arguments[i];
  }
  return result;
}

console.log(max(5, -2, 30, 6, -40, 50));
